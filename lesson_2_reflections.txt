What happens when you initialize a repository? Why do you need to do it?
When i initialize a repository, Git puts a ".git" hidden directory in the containing folder. With the repository i will be able to commit versions of my files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is the step between commit and working directory. When you put something in the staging area, it is going to commit. It is useful because you decide what do you want to commit and that's why you put it in the staging area.

How can you use the staging area to make sure you have one commit per logical change?
With git diff you can see the changes between working directory and staging area so if you want to go on, you add the file to the staging area. Then with git diff --staged you can compare the changes that you want to commit with the same file from the latest commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
If you want to make a change in your project and save it without changing the last one. You can have different parts of you project saved.

How do the diagrams help you visualize the branch structure?
We saw the parents of it's commit, so a commit without branch it's like never existed.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together is useful for example if more than one people are working on a project and they work in different parts of it and in the end they want to complete it putting that parts together. In the diagram we represent it like this because it is just like it takes separate ways and with the merge those ways meet each other.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
pros: in automatic merging it won't need to do it by yourself, so with less effort the branches are merged.
cons: but in automatic merging you don't in a confict case what git will do, so the manually way in this situation is better. But in most cases files would conflict...